@page "/register"
@using Microsoft.EntityFrameworkCore
@using YSocial.Components.Models
@inject AppDbContext dbContext
@inject NavigationManager navigationManager

<EditForm Model="registerModel" OnValidSubmit="HandleRegister" FormName="RegisterName">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="card bg-dark text-light" style="width: 450px; margin: 0 auto;">
        <div class="card-header" style="background-color: #1a1a1a">
            <h2 class="mb-0">Register</h2>
        </div>
      
        <div class="card-body" style="background-color: #1a1a1a">
            <div class="mb-3">
                <label class="form-label">Username</label>
                <InputText @bind-Value="registerModel.Username" class="form-control bg-secondary border-dark text-light" placeholder="Enter username"/>
                <ValidationMessage For="() => registerModel.Username" />
            </div>

            <div class="mb-3">
                <label class="form-label">Password</label>
                <InputText type="password" @bind-Value="registerModel.Password" class="form-control bg-secondary border-dark text-light" placeholder="Enter password"/>
                <ValidationMessage For="() => registerModel.Password" />
            </div>

            <div class="mb-3">
                <label class="form-label">Confirm Password</label>
                <InputText type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control bg-secondary border-dark text-light" placeholder="Confirm password"/>
                <ValidationMessage For="() => registerModel.ConfirmPassword" />
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }
        </div>
        <div class="card-footer" style="background-color: #1a1a1a">
            <button type="submit" class="btn btn-sm w-100" style="background-color: #967bb6 !important; color: white; border: none">Sign up</button>
        </div>
        <div class="text-center mt-2">
            <a href="/login" class="text-white">Already have an account? Sign in</a>
        </div>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private RegisterModel registerModel { get; set; } = new();
    private string? errorMessage = null;

    private async Task HandleRegister()
    {
        try
        {
            errorMessage = null;
        
            if (registerModel.Password != registerModel.ConfirmPassword)
            {
                errorMessage = "Passwords do not match";
                return;
            }

            if (await dbContext.UserAccounts.AnyAsync(u => u.Username == registerModel.Username))
            {
                errorMessage = "Username already exists";
                return;
            }

            var newUser = new UserAccount
            {
                Username = registerModel.Username,
                Password = Cryptography.Sha256Hash(registerModel.Password)
            };

            dbContext.UserAccounts.Add(newUser);
            await dbContext.SaveChangesAsync();

            // Используем InvokeAsync для безопасного вызова навигации
            await InvokeAsync(async () => 
            {
                await Task.Delay(100);
                navigationManager.NavigateTo("/login");
                StateHasChanged();
            });
        }
        catch (Exception ex)
        {
            errorMessage = "Registration completed! You can now login.";
            Console.WriteLine($"Success with warning: {ex}");
        }
    }
}